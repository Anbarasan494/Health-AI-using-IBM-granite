# -*- coding: utf-8 -*-
"""Health-AI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TeakwKB9C5BzWm0rwK4ESBjUfmu0hXJt
"""

!pip install transformers torch gradio -q

# ----------------------------
# 1. Install Dependencies
# ----------------------------
# !pip install -q transformers accelerate gradio torch

# ----------------------------
# 2. Import Libraries
# ----------------------------
import gradio as gr
import torch
from transformers import AutoTokenizer, AutoModelForCausalLM

# ----------------------------
# 3. Load Granite Model
# ----------------------------
model_name = "ibm-granite/granite-3.2-2b-instruct"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForCausalLM.from_pretrained(
    model_name,
    torch_dtype=torch.float16,  # reduces RAM usage
    device_map="auto"           # auto place on GPU/CPU
)

# ----------------------------
# 4. Generate Function
# ----------------------------
def generate_response(prompt):
    inputs = tokenizer(prompt, return_tensors="pt").to(model.device)
    outputs = model.generate(
        **inputs,
        max_new_tokens=400,
        temperature=0.7,
        do_sample=True
    )
    return tokenizer.decode(outputs[0], skip_special_tokens=True)

# ----------------------------
# 5. Custom CSS for UI
# ----------------------------
custom_css = """
/* Navigation Bar (Tabs) */
.svelte-1ipelgc {
    display: flex;
    justify-content: center;
    background-color: #f4f6f7;
    padding: 10px;
    border-radius: 10px;
    margin-bottom: 20px;
    box-shadow: 0px 2px 6px rgba(0,0,0,0.1);
}

/* Tab buttons */
.svelte-1ipelgc button {
    font-size: 22px !important;   /* üëà CHANGE TAB TEXT SIZE HERE */
    font-weight: bold;
    color: #2E86C1;
    padding: 10px 20px;
    margin: 0 5px;
    border-radius: 8px;
    transition: all 0.3s ease;
}

/* Highlight active tab */
.svelte-1ipelgc button[aria-selected="true"] {
    background-color: #2E86C1;
    color: white !important;
}

/* Input text size */
textarea, input, select {
    font-size: 16px !important;   /* üëà CHANGE INPUT TEXT SIZE HERE */
}

/* Output boxes - scrollable */
.output-box textarea {
    font-size: 18px !important;   /* üëà CHANGE OUTPUT TEXT SIZE HERE */
    height: 300px !important;     /* fixed height */
    overflow-y: auto !important;  /* enable scroll */
    resize: vertical !important;  /* user can resize */
}

/* Center buttons */
.center-btn {
    display: flex;
    justify-content: center;
}
"""

# ----------------------------
# 6. Gradio App
# ----------------------------
with gr.Blocks(css=custom_css) as app:
    # Main Heading
    gr.Markdown(
        "<h1 style='text-align:center; font-size:34px; color:#2E86C1;'>ü©∫ Medical AI Assistant</h1>"
    )
    gr.Markdown(
        "<p style='text-align:center; font-size:16px; color:gray;'>AI-powered Disease Prediction and Treatment Suggestions</p>"
    )

    with gr.Tabs():
        # Disease Prediction Tab
        with gr.TabItem("üîç Disease Prediction"):
            disease_input = gr.Textbox(
                label="Enter your symptoms",
                placeholder="e.g. fever, cough, headache"
            )

            with gr.Row(elem_classes="center-btn"):
                disease_btn = gr.Button("Predict Disease", variant="primary")

            disease_output = gr.Textbox(
                label="Predicted Disease",
                lines=10,
                elem_classes="output-box",
                interactive=False
            )

            disease_btn.click(
                fn=generate_response,
                inputs=disease_input,
                outputs=disease_output
            )

        # Treatment Plans Tab
        with gr.TabItem("üíä Treatment Plans"):
            treatment_input = gr.Textbox(
                label="Enter diagnosed disease",
                placeholder="e.g. Diabetes, Hypertension"
            )

            with gr.Row(elem_classes="center-btn"):
                treatment_btn = gr.Button("Get Treatment Plan", variant="secondary")

            treatment_output = gr.Textbox(
                label="Suggested Treatment Plan",
                lines=12,
                elem_classes="output-box",
                interactive=False
            )

            treatment_btn.click(
                fn=generate_response,
                inputs=treatment_input,
                outputs=treatment_output
            )

    gr.Markdown(
        "<p style='text-align:center; font-size:14px; color:gray;'>‚ö†Ô∏è Disclaimer: This AI provides informational support only. Always consult a medical professional.</p>"
    )

# ----------------------------
# 7. Launch App
# ----------------------------
app.launch()